// SNMPpp: https://sourceforge.net/p/snmppp/
// SNMPpp project uses the MIT license. See LICENSE for details.
// Copyright (C) 2013 Stephane Charette <stephanecharette@gmail.com>

The SNMPpp project is not about installing or running SNMP, but as a basic requirement to using it or developing with SNMPpp, you must have access to a valid SNMP server.  Normally, the easiest way to do this is to get SNMP running on the same development platform or VM as where SNMPpp will be used.  For example, please see:  http://charette.no-ip.com:81/programming/2013-02-23_UbuntuVM/index.html

These are my own SNMP setup notes (February 2013); use them as-is, or perhaps as a starting reference:

	- install Ubuntu 12.10 64-bit in a VM
	- sudo apt-get install snmp libsnmp-dev snmpd snmp-mibs-downloader
	- edit /etc/snmp/snmp.conf and comment out the empty "mibs :" line
	- run this command to test it:    snmpwalk -c public -v 2c 127.0.0.1 .1

The default snmpd configuration file forces snmpd to listen on 127.0.0.1.  To open it up to all interfaces:

	- edit /etc/snmp/snmpd.conf
	- look for this line:  agentAddress udp:127.0.0.1:161
	- change it like this: agentAddress udp:161,tcp:161
	- restart the server:  sudo service snmpd restart
	- run this command to test it:    snmpwalk -c public -v 2c 192.168.x.x .1
(Obviously use the correct IP address.)

The default snmpd configuration file only provides a very small subset of the SNMP MIB tree.  This is controlled using views, where different users from different source addresses can be shown a different amount of information.  To enable the full MIB tree from SNMP requests on 127.0.0.1:

	- edit /etc/snmp/snmpd.conf
	- look for this line:    #rocommunity public localhost
	- uncomment it:          rocommunity public localhost
	- restart the server:  sudo service snmpd restart
	- run this command to test it:    snmpwalk -c public -v 2c 127.0.0.1 .1
	- you should now see several thousand lines of output
	- to see the numeric OIDs:        snmpwalk -c public -v 2c -On 127.0.0.1 .1
	- to see the short name:          snmpwalk -c public -v 2c -OS 127.0.0.1 .1
	- to see the full name:           snmpwalk -c public -v 2c -Ou 127.0.0.1 .1

The default snmpd configuration file will create the AgentX socket so only processes running as "root" can connect to it.  This means if you want to send out a trap, as soon as you try to make calls such as SNMPpp::initializeNetSnmpAgent() you'll see errors such as this:

	No log handling enabled - turning on stderr logging
	Warning: Failed to connect to the agentx master agent ([NIL]): 
	Cannot rename /var/lib/snmp/foo.conf to /var/lib/snmp/foo.0.conf
	Cannot unlink /var/lib/snmp/foo.conf
	read_config_store open failure on /var/lib/snmp/foo.conf

To fix the first problem, you need to tell snmpd to open up the AgentX socket for read/write access to more than just the root user:

	- edit /etc/snmp/snmpd.conf
	- look for this line:            master agentx
	- add this new line after it:    agentXPerms 777 666
	- (note there are additional optional parameters for agentXPerms...look it up if you need more security)
	- restart the server:            sudo service snmpd restart

To fix the file persion problem, make sure that /var/lib/snmp is writeable by every user which runs an AgentX application.  For development purposes, I made my directory writeable by everyone:

	- chmod a+w /var/lib/snmp

----

Obviously there is much more that can be configured with snmpd.conf, some of which has important security implications.  I strongly suggest you read through the man page for snmpd.conf to ensure snmpd isn't left wide open with a common default community string and open permissions.

----

St√©phane Charette <stephanecharette@gmail.com>
2013-Feb-26.

